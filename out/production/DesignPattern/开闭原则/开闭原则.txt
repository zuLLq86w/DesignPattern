

基本介绍：
    1.开闭原则是编程中最基础、最重要的设计原则。
    2.一个软件实体，如类、模块、函数应该对扩展开放，对修改关闭。用抽象构建框架，用实现扩展框架。
    3.当软件需要变化时，尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。
    4.编程中遵循其他原则，以及使用设计模式的目的就是遵循开闭原则，


Demo1的优缺点：
    1.优点是比较好理解，简单易操作。
    2.缺点是违反了设计模式的ocp(开闭原则)原则，即对扩展开放(提供方)，对修改关闭(使用方)。即当我们给类增加新功能的时候，尽量不修改代码，或者尽可能少修改代码。
    3.比如我们这时要增加一个图形种类，我们需要修改的地方比较多。如三角形， 我们需要新增三角形类，使用时还需新增画三角形的方法。
    4.代码演示看Demo2

Demo1的改进思路分析
    思路：把创建Shape类做成抽象类，并提供一个抽象的draw方法，让子类去实现即可，这样我们有新的图形种类时，只需要让新的图形类继承Shape，并实现draw方法即可，使用方的代码就不需要修改->满足了开闭原则。


